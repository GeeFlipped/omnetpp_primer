\BOOKMARK [0][-]{chapter*.1}{目录}{}% 1
\BOOKMARK [0][-]{chapter.1}{1 OMNeT++仿真平台}{}% 2
\BOOKMARK [1][-]{section.1.1}{1.1 OMNeT++简介}{chapter.1}% 3
\BOOKMARK [1][-]{section.1.2}{1.2 OMNeT++开源库}{chapter.1}% 4
\BOOKMARK [2][-]{subsection.1.2.1}{1.2.1\040INET}{section.1.2}% 5
\BOOKMARK [2][-]{subsection.1.2.2}{1.2.2\040INETMANET}{section.1.2}% 6
\BOOKMARK [2][-]{subsection.1.2.3}{1.2.3\040Mobility\040Framework}{section.1.2}% 7
\BOOKMARK [2][-]{subsection.1.2.4}{1.2.4\040SensorSimulator}{section.1.2}% 8
\BOOKMARK [2][-]{subsection.1.2.5}{1.2.5\040Castalia}{section.1.2}% 9
\BOOKMARK [2][-]{subsection.1.2.6}{1.2.6\040OverSim}{section.1.2}% 10
\BOOKMARK [2][-]{subsection.1.2.7}{1.2.7\040TTE4INET}{section.1.2}% 11
\BOOKMARK [0][-]{chapter.2}{2 初入OMNeT++}{}% 12
\BOOKMARK [1][-]{section.2.1}{2.1 OMNeT++下载}{chapter.2}% 13
\BOOKMARK [1][-]{section.2.2}{2.2 OMNeT++安装}{chapter.2}% 14
\BOOKMARK [2][-]{subsection.2.2.1}{2.2.1 安装准备}{section.2.2}% 15
\BOOKMARK [2][-]{subsection.2.2.2}{2.2.2 图文并茂}{section.2.2}% 16
\BOOKMARK [1][-]{section.2.3}{2.3 INET库}{chapter.2}% 17
\BOOKMARK [2][-]{subsection.2.3.1}{2.3.1 INET库的介绍}{section.2.3}% 18
\BOOKMARK [2][-]{subsection.2.3.2}{2.3.2 INET库的安装}{section.2.3}% 19
\BOOKMARK [1][-]{section.2.4}{2.4\040If\040you\040are\040building\040from\040command\040line:}{chapter.2}% 20
\BOOKMARK [1][-]{section.2.5}{2.5\040If\040you\040are\040using\040the\040IDE:}{chapter.2}% 21
\BOOKMARK [1][-]{section.2.6}{2.6\040TTE4INET}{chapter.2}% 22
\BOOKMARK [1][-]{section.2.7}{2.7 常规使用}{chapter.2}% 23
\BOOKMARK [2][-]{subsection.2.7.1}{2.7.1 导入工程}{section.2.7}% 24
\BOOKMARK [2][-]{subsection.2.7.2}{2.7.2 程序执行与调试}{section.2.7}% 25
\BOOKMARK [0][-]{chapter.3}{3 初入OMNeT++}{}% 26
\BOOKMARK [1][-]{section.3.1}{3.1 学习map}{chapter.3}% 27
\BOOKMARK [2][-]{subsection.3.1.1}{3.1.1 OMNeT++文档与指导书}{section.3.1}% 28
\BOOKMARK [2][-]{subsection.3.1.2}{3.1.2 tictoc指导手册}{section.3.1}% 29
\BOOKMARK [2][-]{subsection.3.1.3}{3.1.3 仿真手册}{section.3.1}% 30
\BOOKMARK [1][-]{section.3.2}{3.2 个性化IDE}{chapter.3}% 31
\BOOKMARK [2][-]{subsection.3.2.1}{3.2.1 CPP高亮设置}{section.3.2}% 32
\BOOKMARK [2][-]{subsection.3.2.2}{3.2.2 其他设置}{section.3.2}% 33
\BOOKMARK [3][-]{section*.2}{显示行号}{subsection.3.2.2}% 34
\BOOKMARK [1][-]{section.3.3}{3.3 本章小结}{chapter.3}% 35
\BOOKMARK [0][-]{chapter.4}{4 OMNeT++仿真类}{}% 36
\BOOKMARK [1][-]{section.4.1}{4.1 类说明}{chapter.4}% 37
\BOOKMARK [2][-]{subsection.4.1.1}{4.1.1 cModule　}{section.4.1}% 38
\BOOKMARK [2][-]{subsection.4.1.2}{4.1.2\040cPar}{section.4.1}% 39
\BOOKMARK [2][-]{subsection.4.1.3}{4.1.3\040cGate}{section.4.1}% 40
\BOOKMARK [2][-]{subsection.4.1.4}{4.1.4\040cTopology}{section.4.1}% 41
\BOOKMARK [2][-]{subsection.4.1.5}{4.1.5\040cExpression}{section.4.1}% 42
\BOOKMARK [2][-]{subsection.4.1.6}{4.1.6 EV类}{section.4.1}% 43
\BOOKMARK [0][-]{chapter.5}{5\040ifndef\040COMPILETIME_LOGLEVEL}{}% 44
\BOOKMARK [0][-]{chapter.6}{6\040ifdef\040NDEBUG}{}% 45
\BOOKMARK [0][-]{chapter.7}{7\040define\040COMPILETIME_LOGLEVEL\040omnetpp::LOGLEVEL_DETAIL}{}% 46
\BOOKMARK [0][-]{chapter.8}{8\040else}{}% 47
\BOOKMARK [0][-]{chapter.9}{9\040define\040COMPILETIME_LOGLEVEL\040omnetpp::LOGLEVEL_TRACE}{}% 48
\BOOKMARK [0][-]{chapter.10}{10\040endif}{}% 49
\BOOKMARK [0][-]{chapter.11}{11\040endif}{}% 50
\BOOKMARK [0][-]{chapter.12}{12\040ifndef\040COMPILETIME_LOG_PREDICATE}{}% 51
\BOOKMARK [0][-]{chapter.13}{13\040define\040COMPILETIME_LOG_PREDICATE\(object,\040logLevel,\040category\)\040\(logLevel\040>=\040COMPILETIME_LOGLEVEL\)}{}% 52
\BOOKMARK [0][-]{chapter.14}{14\040endif}{}% 53
\BOOKMARK [0][-]{chapter.15}{15\040define\040OPP_LOGPROXY\(object,\040logLevel,\040category\)\040\\}{}% 54
\BOOKMARK [0][-]{chapter.16}{16\040define\040EV_STATICCONTEXT\040void\040\(getThisPtr\)\(\)\040=\040omnetpp::getThisPtr;}{}% 55
\BOOKMARK [0][-]{chapter.17}{17\040define\040EV_LOG\(logLevel,\040category\)\040OPP_LOGPROXY\(getThisPtr\(\),\040logLevel,\040category\).getStream\(\)}{}% 56
\BOOKMARK [0][-]{chapter.18}{18\040define\040EV\040EV_INFO}{}% 57
\BOOKMARK [0][-]{chapter.19}{19\040define\040EV_FATAL\040EV_LOG\(omnetpp::LOGLEVEL_FATAL,\040nullptr\)}{}% 58
\BOOKMARK [0][-]{chapter.20}{20\040define\040EV_ERROR\040EV_LOG\(omnetpp::LOGLEVEL_ERROR,\040nullptr\)}{}% 59
\BOOKMARK [0][-]{chapter.21}{21\040define\040EV_WARN\040EV_LOG\(omnetpp::LOGLEVEL_WARN,\040nullptr\)}{}% 60
\BOOKMARK [0][-]{chapter.22}{22\040define\040EV_INFO\040EV_LOG\(omnetpp::LOGLEVEL_INFO,\040nullptr\)}{}% 61
\BOOKMARK [0][-]{chapter.23}{23\040define\040EV_DETAIL\040EV_LOG\(omnetpp::LOGLEVEL_DETAIL,\040nullptr\)}{}% 62
\BOOKMARK [0][-]{chapter.24}{24\040define\040EV_DEBUG\040EV_LOG\(omnetpp::LOGLEVEL_DEBUG,\040nullptr\)}{}% 63
\BOOKMARK [0][-]{chapter.25}{25\040define\040EV_TRACE\040EV_LOG\(omnetpp::LOGLEVEL_TRACE,\040nullptr\)}{}% 64
\BOOKMARK [0][-]{chapter.26}{26\040define\040EV_C\(category\)\040EV_INFO_C\(category\)}{}% 65
\BOOKMARK [0][-]{chapter.27}{27\040define\040EV_FATAL_C\(category\)\040EV_LOG\(omnetpp::LOGLEVEL_FATAL,\040category\)}{}% 66
\BOOKMARK [0][-]{chapter.28}{28\040define\040EV_ERROR_C\(category\)\040EV_LOG\(omnetpp::LOGLEVEL_ERROR,\040category\)}{}% 67
\BOOKMARK [0][-]{chapter.29}{29\040define\040EV_WARN_C\(category\)\040EV_LOG\(omnetpp::LOGLEVEL_WARN,\040category\)}{}% 68
\BOOKMARK [0][-]{chapter.30}{30\040define\040EV_INFO_C\(category\)\040EV_LOG\(omnetpp::LOGLEVEL_INFO,\040category\)}{}% 69
\BOOKMARK [0][-]{chapter.31}{31\040define\040EV_DETAIL_C\(category\)\040EV_LOG\(omnetpp::LOGLEVEL_DETAIL,\040category\)}{}% 70
\BOOKMARK [0][-]{chapter.32}{32\040define\040EV_DEBUG_C\(category\)\040EV_LOG\(omnetpp::LOGLEVEL_DEBUG,\040category\)}{}% 71
\BOOKMARK [0][-]{chapter.33}{33\040define\040EV_TRACE_C\(category\)\040EV_LOG\(omnetpp::LOGLEVEL_TRACE,\040category\)}{}% 72
\BOOKMARK [0][-]{chapter.34}{34\040endif}{}% 73
\BOOKMARK [1][-]{section.34.1}{34.1 虚函数}{chapter.34}% 74
\BOOKMARK [2][-]{subsection.34.1.1}{34.1.1 initialize函数}{section.34.1}% 75
\BOOKMARK [2][-]{subsection.34.1.2}{34.1.2 handleMessage函数}{section.34.1}% 76
\BOOKMARK [2][-]{subsection.34.1.3}{34.1.3 refreshDisplay函数}{section.34.1}% 77
\BOOKMARK [2][-]{subsection.34.1.4}{34.1.4 finish函数}{section.34.1}% 78
\BOOKMARK [1][-]{section.34.2}{34.2 本章小结}{chapter.34}% 79
\BOOKMARK [0][-]{chapter.35}{35 OMNeT++仿真技巧}{}% 80
\BOOKMARK [1][-]{section.35.1}{35.1 设计技巧}{chapter.35}% 81
\BOOKMARK [2][-]{subsection.35.1.1}{35.1.1 技巧一：信道模型很重要}{section.35.1}% 82
\BOOKMARK [2][-]{subsection.35.1.2}{35.1.2 技巧二：send函数有套路}{section.35.1}% 83
\BOOKMARK [2][-]{subsection.35.1.3}{35.1.3 技巧三：如何访问同一级的其他模块}{section.35.1}% 84
\BOOKMARK [2][-]{subsection.35.1.4}{35.1.4 技巧四：遍历所有模块}{section.35.1}% 85
\BOOKMARK [2][-]{subsection.35.1.5}{35.1.5 技巧五：如何得到某一个模块引用的ned路径}{section.35.1}% 86
\BOOKMARK [2][-]{subsection.35.1.6}{35.1.6 技巧六：使用cTopology类遍历拓扑初始化路由表}{section.35.1}% 87
\BOOKMARK [2][-]{subsection.35.1.7}{35.1.7 技巧七：如何使用OpenSceneGraph}{section.35.1}% 88
\BOOKMARK [2][-]{subsection.35.1.8}{35.1.8 技巧八：如何多次利用同一个msg}{section.35.1}% 89
\BOOKMARK [2][-]{subsection.35.1.9}{35.1.9 技巧九：initialize函数的不同}{section.35.1}% 90
\BOOKMARK [2][-]{subsection.35.1.10}{35.1.10 技巧十：如何从仿真场景读取节点坐标}{section.35.1}% 91
\BOOKMARK [2][-]{subsection.35.1.11}{35.1.11 技巧十一：如何调用INET中的类}{section.35.1}% 92
\BOOKMARK [1][-]{section.35.2}{35.2 本章小结}{chapter.35}% 93
\BOOKMARK [0][-]{附录 .1.A}{附录  A 网络性能指标}{}% 94
\BOOKMARK [1][-]{section.1.A.1}{A.1 1 速率}{附录 .1.A}% 95
\BOOKMARK [1][-]{section.1.A.2}{A.2 2 吞吐率}{附录 .1.A}% 96
\BOOKMARK [1][-]{section.1.A.3}{A.3 3 延迟}{附录 .1.A}% 97
\BOOKMARK [1][-]{section.1.A.4}{A.4 4 丢包率}{附录 .1.A}% 98
\BOOKMARK [1][-]{section.1.A.5}{A.5 5 带宽}{附录 .1.A}% 99
\BOOKMARK [1][-]{section.1.A.6}{A.6 6 时延带宽积}{附录 .1.A}% 100
\BOOKMARK [1][-]{section.1.A.7}{A.7 7 信道利用率}{附录 .1.A}% 101
\BOOKMARK [1][-]{section.1.A.8}{A.8 9 网络利用率}{附录 .1.A}% 102
\BOOKMARK [1][-]{section.1.A.9}{A.9 10 往返时间RTT}{附录 .1.A}% 103
